/****************************************************************************
 *                                                                          *
 *  Author : lukasz.iwaszkiewicz@gmail.com                                  *
 *  ~~~~~~~~                                                                *
 *  License : see COPYING file for details.                                 *
 *  ~~~~~~~~~                                                               *
 ****************************************************************************/

module;
#include <cstdlib>
export module logic.processing:generate;
import logic.data;

namespace logic {

/**
 * Generate a square signal. bitsTotal gets rounded to nearest number
 * divisible by 8. By default signal strarts from HIGH state, but you
 * can change that by using the state argument.
 */
export class Square {
public:
        Square (bool initialState = true) : state{initialState} {}
        Bytes operator() (size_t hiBits, size_t loBits, size_t bitsTotal);

private:
        size_t scnt{};
        bool state{};
};

/**
 * Random stream of bits.
 */
export class Random {
public:
        Bytes operator() (size_t hiBits, size_t loBits, size_t bitsTotal);
};

} // namespace logic