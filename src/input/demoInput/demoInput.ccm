/****************************************************************************
 *                                                                          *
 *  Author : lukasz.iwaszkiewicz@gmail.com                                  *
 *  ~~~~~~~~                                                                *
 *  License : see COPYING file for details.                                 *
 *  ~~~~~~~~~                                                               *
 ****************************************************************************/

module;
#include "common/params.hh"
#include <atomic>
#include <cstdint>
#include <cstdlib>
#include <libusb.h>
#include <mutex>
#include <vector>
export module logic:input.demo;
export import :input;

namespace logic {

/**
 *
 */
export class DemoInput : public AbstractInput {
public:
        void controlOut (std::vector<uint8_t> const &request) override {}
        std::vector<uint8_t> controlIn (size_t /* len */) override { return {}; }

        void start () override;
        void stop () override;

        void run () override;

private:
        std::atomic_bool running_;
        std::atomic_bool stop_; /// Send stop request to the device.

        common::acq::Params acquisitionParams;

        uint32_t usbTransfer{}; // TODO validate
        uint32_t usbBlock{};
        size_t singleTransferLenB{};

        std::mutex mutex;
};

} // namespace logic