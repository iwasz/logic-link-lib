/****************************************************************************
 *                                                                          *
 *  Author : lukasz.iwaszkiewicz@gmail.com                                  *
 *  ~~~~~~~~                                                                *
 *  License : see COPYING file for details.                                 *
 *  ~~~~~~~~~                                                               *
 ****************************************************************************/

module;
#include <memory>
#include <string>
export module logic:device.factory;
import :device;
import :input.usb;
import :input.demo;

namespace logic {

export class Factory {
public:
        Factory () = default;
        Factory (Factory const &) = delete;
        Factory &operator= (Factory const &) = delete;
        Factory (Factory &&) = delete;
        Factory &operator= (Factory &&) = delete;

        std::unique_ptr<IDevice> create (std::string const &name);

private:
        /**
         * All inputs are created here and shared by all the devices.
         *
         */
        UsbAsync usb;
        DemoInput demo;
};

}; // namespace logic