/****************************************************************************
 *                                                                          *
 *  Author : lukasz.iwaszkiewicz@gmail.com                                  *
 *  ~~~~~~~~                                                                *
 *  License : see COPYING file for details.                                 *
 *  ~~~~~~~~~                                                               *
 ****************************************************************************/

module;
#include "common/error.hh"
#include "common/params.hh"
#include "common/stats.hh"
#include <cstdlib>
#include <unordered_set>
export module logic:device.link;
import :device;

namespace logic {

export class LogicLink : public AbstractDevice {
public:
        explicit LogicLink (IInput *input);

        common::acq::Params configureAcquisition (common::acq::Params const &params, bool legacy = false) override;
        void configureTransmission (TransmissionParams const &params) override;

        common::usb::Stats getStats () override;

        std::unordered_set<logs::Code> getErrors () override;
        void clearErrors () override;

        // Gets initialized in the RAII ctor, so must be ready
        bool isReady () const override { return true; }
        void waitReady () const override {}

        void onStart () override;
        void onStop () override;
};

} // namespace logic